group = "com.viridian.flutter_hce"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.1.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

// Lee Flutter SDK de local.properties
def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader -> localProperties.load(reader) }
}
def flutterSdkPath = localProperties.getProperty("flutter.sdk")
if (flutterSdkPath == null) {
    throw new GradleException("Flutter SDK no encontrado. Define 'flutter.sdk' en android/local.properties.")
}

// Aplica el script (aún soportado, aunque deprecado)
apply from: "${flutterSdkPath}/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.viridian.flutter_hce"

    // Ambas formas para evitar warnings con distintas versiones de AGP
    compileSdkVersion 34
    compileSdk 34

    defaultConfig {
        // HCE está desde API 19; si apuntas a “hace 5 años” (Android 10), puedes subir a 29.
        minSdkVersion 23
        minSdk 23
        consumerProguardFiles "consumer-rules.pro"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.annotation:annotation:1.7.1"

    // Dependencia de Flutter embedding
    compileOnly files("${flutterSdkPath}/bin/cache/artifacts/engine/android-arm64/flutter.jar")
}
